{"AuditResultName":"MissingDefaultDenyIngressAndEgressNetworkPolicy","Namespace":"secure-middleware","ResourceApiVersion":"v1","ResourceKind":"Namespace","ResourceName":"secure-middleware","level":"error","msg":"Namespace is missing a default deny ingress and egress NetworkPolicy.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"cache-store","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/cache-store' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"LimitsNotSet","Container":"cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"warning","msg":"Resource limits not set.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"cache-store","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"cache-store-deployment","ResourceNamespace":"secure-middleware","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"build-code","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/build-code","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/build-code' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"build-code","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"build-code","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"build-code","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"build-code","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"build-code","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"build-code","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"build-code-deployment","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"docker-bench","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/docker-bench","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/docker-bench' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityShouldDropAll","Container":"docker-bench","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"Capability Drop list should be set to ALL. Add the specific ones you need to the Add list and set an override label.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityAdded","Container":"docker-bench","Metadata":"AUDIT_CONTROL","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"Capability \"AUDIT_CONTROL\" added. It should be removed from the capability add list. If you need this capability, add an override label such as 'container.kubeaudit.io/docker-bench.allow-capability-audit-control: SomeReason'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"NamespaceHostNetworkTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"hostNetwork is set to 'true' in PodSpec. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"NamespaceHostIPCTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"hostIPC is set to 'true' in PodSpec. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"NamespaceHostPIDTrue","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"hostPID is set to 'true' in PodSpec. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"docker-bench","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"docker-bench","MountName":"etc-vol","MountPath":"/etc","MountReadOnly":"true","MountVolume":"etc-vol","MountVolumeHostPath":"/etc","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"Sensitive path mounted as volume: etc-vol (hostPath: /etc). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"docker-bench","MountName":"docker-sock-volume","MountPath":"/var/run/docker.sock","MountReadOnly":"true","MountVolume":"docker-sock-volume","MountVolumeHostPath":"/var/run/docker.sock","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"Sensitive path mounted as volume: docker-sock-volume (hostPath: /var/run/docker.sock). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsUserPSCRoot","Container":"docker-bench","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"runAsUser is set to UID 0 (root user) in the PodSecurityContext. Either set it to a value \u003e 0 or remove it and set runAsNonRoot to true.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"docker-bench","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedTrue","Container":"docker-bench","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"docker-bench","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"DaemonSet","ResourceName":"docker-bench-security","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"kubernetes-goat-home","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/kubernetes-goat-home","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/kubernetes-goat-home' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"kubernetes-goat-home","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"kubernetes-goat-home","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"kubernetes-goat-home","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"kubernetes-goat-home","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"kubernetes-goat-home","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"kubernetes-goat-home","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"kubernetes-goat-home-deployment","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"hidden-in-layers","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/hidden-in-layers' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"LimitsNotSet","Container":"hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"warning","msg":"Resource limits not set.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"hidden-in-layers","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"hidden-in-layers","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"batch-check","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/batch-check' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"LimitsNotSet","Container":"batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"warning","msg":"Resource limits not set.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"batch-check","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"batch-check-job","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"MissingDefaultDenyIngressAndEgressNetworkPolicy","Namespace":"big-monolith","ResourceApiVersion":"v1","ResourceKind":"Namespace","ResourceName":"big-monolith","level":"error","msg":"Namespace is missing a default deny ingress and egress NetworkPolicy.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"hunger-check","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/hunger-check' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"LimitsNotSet","Container":"hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"warning","msg":"Resource limits not set.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"hunger-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"hunger-check-deployment","ResourceNamespace":"big-monolith","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"poor-registry","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/poor-registry","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/poor-registry' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"poor-registry","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"poor-registry","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"poor-registry","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"poor-registry","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"poor-registry","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"poor-registry","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"poor-registry-deployment","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"kube-bench","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/kube-bench' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"NamespaceHostPIDTrue","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"hostPID is set to 'true' in PodSpec. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"LimitsNotSet","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"warning","msg":"Resource limits not set.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"kube-bench","MountName":"var-lib-kubelet","MountPath":"/var/lib/kubelet","MountReadOnly":"true","MountVolume":"var-lib-kubelet","MountVolumeHostPath":"/var/lib/kubelet","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"Sensitive path mounted as volume: var-lib-kubelet (hostPath: /var/lib/kubelet). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"kube-bench","MountName":"etc-kubernetes","MountPath":"/etc/kubernetes","MountReadOnly":"true","MountVolume":"etc-kubernetes","MountVolumeHostPath":"/etc/kubernetes","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"Sensitive path mounted as volume: etc-kubernetes (hostPath: /etc/kubernetes). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-master","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"kube-bench","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/kube-bench' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"NamespaceHostPIDTrue","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"hostPID is set to 'true' in PodSpec. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"LimitsNotSet","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"warning","msg":"Resource limits not set.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"kube-bench","MountName":"var-lib-kubelet","MountPath":"/var/lib/kubelet","MountReadOnly":"true","MountVolume":"var-lib-kubelet","MountVolumeHostPath":"/var/lib/kubelet","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"Sensitive path mounted as volume: var-lib-kubelet (hostPath: /var/lib/kubelet). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"kube-bench","MountName":"etc-kubernetes","MountPath":"/etc/kubernetes","MountReadOnly":"true","MountVolume":"etc-kubernetes","MountVolumeHostPath":"/etc/kubernetes","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"Sensitive path mounted as volume: etc-kubernetes (hostPath: /etc/kubernetes). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"kube-bench","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"batch/v1","ResourceKind":"Job","ResourceName":"kube-bench-node","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"health-check","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/health-check' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"health-check","MountName":"docker-sock-volume","MountPath":"/custom/docker/docker.sock","MountReadOnly":"false","MountVolume":"docker-sock-volume","MountVolumeHostPath":"/var/run/docker.sock","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Sensitive path mounted as volume: docker-sock-volume (hostPath: /var/run/docker.sock). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedTrue","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"health-check","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/health-check' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"health-check","MountName":"docker-sock-volume","MountPath":"/custom/docker/docker.sock","MountReadOnly":"false","MountVolume":"docker-sock-volume","MountVolumeHostPath":"/var/run/docker.sock","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Sensitive path mounted as volume: docker-sock-volume (hostPath: /var/run/docker.sock). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedTrue","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"health-check","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"health-check-deployment","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"internal-api","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/internal-api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/internal-api' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"info-app","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/info-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/info-app' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"internal-api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"info-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"internal-api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"info-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"internal-api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"info-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"internal-api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationNil","Container":"info-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"allowPrivilegeEscalation not set which allows privilege escalation. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"internal-api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedNil","Container":"info-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"warning","msg":"privileged is not set in container SecurityContext. Privileged defaults to 'false' but it should be explicitly set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"internal-api","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"info-app","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"internal-proxy-deployment","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AppArmorAnnotationMissing","Container":"system-monitor","MissingAnnotation":"container.apparmor.security.beta.kubernetes.io/system-monitor","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"AppArmor annotation missing. The annotation 'container.apparmor.security.beta.kubernetes.io/system-monitor' should be added.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AutomountServiceAccountTokenTrueAndDefaultSA","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"Default service account with token mounted. automountServiceAccountToken should be set to 'false' on either the ServiceAccount or on the PodSpec or a non-default service account should be used.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"CapabilityOrSecurityContextMissing","Container":"system-monitor","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"Security Context not set. The Security Context should be specified and all Capabilities should be dropped by setting the Drop list to ALL.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"NamespaceHostIPCTrue","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"hostIPC is set to 'true' in PodSpec. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"NamespaceHostPIDTrue","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"hostPID is set to 'true' in PodSpec. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ImageTagMissing","Container":"system-monitor","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"warning","msg":"Image tag is missing.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SensitivePathsMounted","Container":"system-monitor","MountName":"host-filesystem","MountPath":"/host-system","MountReadOnly":"false","MountVolume":"host-filesystem","MountVolumeHostPath":"/","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"Sensitive path mounted as volume: host-filesystem (hostPath: /). It should be removed from the container's mounts list.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"RunAsNonRootPSCNilCSCNil","Container":"system-monitor","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"runAsNonRoot should be set to true or runAsUser should be set to a value \u003e 0 either in the container SecurityContext or PodSecurityContext.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"AllowPrivilegeEscalationTrue","Container":"system-monitor","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"allowPrivilegeEscalation set to 'true'. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"PrivilegedTrue","Container":"system-monitor","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"privileged is set to 'true' in container SecurityContext. It should be set to 'false'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"ReadOnlyRootFilesystemNil","Container":"system-monitor","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"readOnlyRootFilesystem is not set in container SecurityContext. It should be set to 'true'.","time":"2023-05-21T17:31:50+03:00"}
{"AuditResultName":"SeccompProfileMissing","ResourceApiVersion":"apps/v1","ResourceKind":"Deployment","ResourceName":"system-monitor-deployment","level":"error","msg":"Pod Seccomp profile is missing. Seccomp profile should be added to the pod SecurityContext.","time":"2023-05-21T17:31:50+03:00"}
CLI help
  Snyk CLI scans and monitors your projects for security vulnerabilities and license issues.

  For more information visit the Snyk website https://snyk.io

  For details see the CLI documentation https://docs.snyk.io/features/snyk-cli

How to get started
  1. Authenticate by running snyk auth
  2. Test your local project with snyk test
  3. Get alerted for new vulnerabilities with snyk monitor

Available commands
  To learn more about each Snyk CLI command, use the --help option, for example, snyk auth --help.

  Note: The help on the docs site is the same as the --help in the CLI.

  snyk auth
    Authenticate Snyk CLI with a Snyk account.

  snyk test
    Test a project for open source vulnerabilities and license issues.

    Note: Use snyk test --unmanaged to scan all files for known open source dependencies (C/C++
    only).

  snyk monitor
    Snapshot and continuously monitor a project for open source vulnerabilities and license issues.

  snyk container
    Test container images for vulnerabilities.

  snyk iac
    Commands to find and manage security issues in Infrastructure as Code files.

  snyk code
    Find security issues using static code analysis.

  snyk sbom
    Produce an SBOM for a local software project in an ecosystem supported by Snyk.

  snyk log4shell
    Find Log4Shell vulnerability.

  snyk config
    Manage Snyk CLI configuration.

  snyk policy
    Display the .snyk policy for a package.

  snyk ignore
    Modify the .snyk policy to ignore stated issues.

Debug
  Use -d option to output the debug logs.

Configure the Snyk CLI
  You can use environment variables to configure the Snyk CLI and also set variables to configure the
  Snyk CLI to connect with the Snyk API. See Configure the Snyk CLI
  https://docs.snyk.io/features/snyk-cli/configure-the-snyk-cli


